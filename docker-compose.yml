version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: dpar_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: dpar_root_password
      MYSQL_DATABASE: dpar_platform
      MYSQL_USER: dpar_user
      MYSQL_PASSWORD: dpar_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/database/init:/docker-entrypoint-initdb.d
    networks:
      - dpar_network

  # Laravel Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: dpar_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=dpar_platform
      - DB_USERNAME=dpar_user
      - DB_PASSWORD=dpar_password
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
    volumes:
      - ./backend:/var/www/html
      - backend_storage:/var/www/html/storage
    depends_on:
      - mysql
      - redis
    networks:
      - dpar_network

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: dpar_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
      - REACT_APP_BASE_URL=http://localhost:3000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - dpar_network

  # Redis for Caching
  redis:
    image: redis:7-alpine
    container_name: dpar_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dpar_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: dpar_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - dpar_network

volumes:
  mysql_data:
  redis_data:
  backend_storage:

networks:
  dpar_network:
    driver: bridge
